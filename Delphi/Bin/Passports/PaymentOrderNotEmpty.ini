[Caption]

ПП с ненулевыми остатками

[Fields]

ID                    NUMBER(15)         'ID документа'
NREF                  VARCHAR2(25)       'NREF'
DOC_NO                VARCHAR2(50)       'Номер документа'
DOC_DATE              DATE               'Дата документа'  
DOC_NO2               VARCHAR2(50)       'Номер подтв. документа'
DOC_DATE2             DATE               'Дата подтв. документа'
DOC_SUMMA             NUMBER(22,2)       'Сумма документа'
CURR_CODE             VARCHAR2(3)        'Код валюты'
SUMMA                 NUMBER(22,2)       'Поступившая сумма'
REST                  NUMBER             'Остаток'
DESCRIPT              VARCHAR2(4000)     'Назначение платежа'
TYPE_SYS_NAME         VARCHAR2(1500)     'Тип платёжного документа'
PAYER_ID              NUMBER(15)         'ID плательщика'
PAYER_NAME            VARCHAR2(1500)     'Наименование плательщика'
PAYER_FULL_NAME       VARCHAR2(4000)     'Полное наименование плательщика'
PAYER_INN             VARCHAR2(12)       'ИНН плательщика'
PAYER_KPP             VARCHAR2(10)       'КПП плательщика'
PAYER_TYPESYSNAME     VARCHAR2(1500)     'Тип плательщика'
PAYER_ADDRESS         VARCHAR2(200)      'Адрес плательщика'
PAYER_OKPO            VARCHAR2(10)       'ОКПО плательщика'
PAYER_OGRN            VARCHAR2(30)       'ОГРН плательщика'
PAYER_SOATO           VARCHAR2(8)        'СОАТО плательщика'
PAYER_PHONE           VARCHAR2(40)       'Телефон плательщика'
PAYER_FAX             VARCHAR2(30)       'Факс плательщика'
PAYER_TELEX           VARCHAR2(30)       'Телекс плательщика'
PAYER_TELEGRAPH       VARCHAR2(100)      'Телеграф плательщика'
PAYER_TELETYPE        VARCHAR2(100)      'Телетайп плательщика'
BROKER_LIC            VARCHAR2(30)       'Брокер. Лицензия'
BROKER_DATE_B         DATE               'Брокер. Дата начала'
BROKER_DATE_E         DATE               'Брокер. Дата окончания'
BROKER_BSKOLTOI       NUMBER             'Брокер. BSKOLTOI'
BROKER_BSKOLTOII      NUMBER             'Брокер. BSKOLTOII'
CUSTOMS_CODE          VARCHAR2(5)        'Таможня. Код'
CUSTOMS_CODE_8        VARCHAR2(8)        'Таможня. Код 8'
CUSTOMS_DT_START      DATE               'Таможня. Дата изменения статуса'
CUSTOMS_TTT           VARCHAR2(3)        'Таможня. ТТТ'
BANK_BIC              VARCHAR2(10)       'Банк. БИК'
BANK_RUR_DATE         DATE               'Банк. Дата рублёвой лицензии'
BANK_VAL_DATE         DATE               'Банк. Дата валютной лицензии'
BANK_CHIEF_NAME       VARCHAR2(100)      'Банк. Председатель правления'
BANK_CHIEF_ACC_NAME   VARCHAR2(100)      'Банк. Главбух'
DECL_CATEGORY         VARCHAR2(3)        'Декларант. Категория'
DECL_CUSTOMS_CODE     VARCHAR2(10)       'Декларант. Код таможни'
DECL_REG_DATE         DATE               'Декларант. Дата регистрации'
DECL_POST9            VARCHAR2(9)        'Декларант. Код почтовой зоны'
DECL_ALFA2            VARCHAR2(2)        'Декларант. Код страны'
PERS_FIRST_NAME       VARCHAR2(100)      'ФЛ. Имя'
PERS_LAST_NAME        VARCHAR2(100)      'ФЛ. Фамилия'
PERS_MIDDLE_NAME      VARCHAR2(100)      'ФЛ. Отчество'
PERS_COUNTRY          VARCHAR2(3)        'ФЛ. Код страны'
PERS_DOC_TYPE         VARCHAR2(3)        'ФЛ. Тип документа'
PERS_SER_NO           VARCHAR2(30)       'ФЛ. Серия документа'
PERS_DOC_NO           VARCHAR2(30)       'ФЛ. Номер документа'
PERS_ISSUED_BY        VARCHAR2(100)      'ФЛ. Кем выдан документ'
PERS_ISSUED_DATE      DATE               'ФЛ. Дата выдачи документа'
UPLOAD_DATE           DATE               'Дата выгрузки'

[DownloadSQL]

SELECT     po.id
          ,po.nref
          ,po.doc_no
          ,po.doc_date
          ,po.doc_no2
          ,po.doc_date2
          ,po.doc_summa
          ,cr.code
          ,po.summa
          ,p_payment_order.GetRestSumma(po.id)
          ,po.note
          ,ot.sysname
          ,po.payer_id
          ,s.NAME
          ,s.Full_Name
          ,s.inn
          ,s.kpp
          ,s.typesysname
          ,s.Address
          ,s.Okpo
          ,s.OGRN
          ,s.SOATO
          ,s.Phone
          ,s.Fax
          ,s.Telex
          ,s.Telegraph
          ,s.Teletype
          ,b.license_no
          ,b.beg_date
          ,b.end_date
          ,b.bskoltoi
          ,b.bskoltoii
          ,c.customs_code
          ,c.customs_code_8
          ,c.dt_start
          ,c.ttt
          ,bn.bic
          ,bn.rur_lic_date
          ,bn.val_lic_date
          ,bn.chief_name
          ,bn.chief_acc_name
          ,d.category
          ,d.custom_code
          ,d.reg_date
          ,d.post9
          ,d.alfa2
          ,p.first_name
          ,p.last_name
          ,p.middle_name
          ,p.country_code
          ,p.doc_Type
          ,p.ser_no
          ,p.doc_no
          ,p.issued_by
          ,p.issued_date
          ,sysdate
  FROM     fdc_payment_order po
          ,fdc_nsi_currency  cr
          ,fdc_subject_lst   s
          ,fdc_object        o
          ,fdc_object_type   ot
          ,fdc_broker        b
          ,fdc_customs       c
          ,fdc_bank          bn
          ,fdc_declarant     d
          ,fdc_person_lst    p
 WHERE     p_payment_order.GetRestSumma(po.id) > 0
   AND     po.currency_id                      = cr.id
   AND     po.payer_id                         = s.id
   AND     po.doc_no2                          IS NOT NULL
   AND     o.id                                = po.id
   AND     ot.id                               = o.object_type_id
   AND     po.payer_id                         = b.id(+)
   AND     po.payer_id                         = c.id(+)
   AND     po.payer_id                         = bn.id(+)
   AND     po.payer_id                         = d.id(+)
   AND     po.payer_id                         = p.id(+)


[UploadInitSql]

-- Create table
create table REST_MOVE_MAP
(
  ID     INTEGER not null,
  OLD_ID INTEGER,
  UPLOAD_DATE DATE
);
-- Create/Recreate primary, unique and foreign key constraints 
alter table REST_MOVE_MAP
  add constraint PK_REST_MOVE_MAP primary key (ID);
alter table REST_MOVE_MAP
  add constraint FK_REST_MOVE_MAP_001 foreign key (ID)
  references FDC_OBJECT (ID) on delete cascade;
-- Create/Recreate indexes 
create index IDX_REST_MOVE_MAP_001 on REST_MOVE_MAP (OLD_ID);


[UploadRecSql]

/*--- Загрузка ПП с остатком ---*/
WHENEVER SQLERROR EXIT 101

DECLARE
  v_Id         NUMBER(15);
  v_CurrencyId NUMBER(15);
  v_Date       DATE;
  v_SubjectID  NUMBER(15);
BEGIN
  -- Поиск ПП среди уже загруженных
  BEGIN
    SELECT id, upload_date
      INTO v_Id, v_Date
      FROM rest_move_map
     WHERE old_id = :ID;
  EXCEPTION
    WHEN no_data_found THEN
      v_Id := 0;
  END;
  
  -- Поиск валюты
  BEGIN
    SELECT ID
      INTO v_CurrencyId
      FROM fdc_nsi_currency t
     WHERE t.code = :CURR_CODE;
  EXCEPTION
    WHEN no_data_found THEN
      raise_application_error( -20000, 'Не найдена валюта с кодом <' || :CURR_CODE || '>!' );
  END;
  
  -- Поиск плательщика
  BEGIN
    -- Среди уже загруженных
    SELECT ID
      INTO v_SubjectID
      FROM rest_move_map
     WHERE old_id = :PAYER_ID;
  EXCEPTION
    WHEN no_data_found THEN
      -- Среди НСИ целевой БД
      BEGIN
        IF :PAYER_KPP IS NOT NULL THEN
          SELECT ID
            INTO v_SubjectID
            FROM fdc_subject
            WHERE inn = :PAYER_INN
              AND kpp = :PAYER_KPP;
        ELSE
          SELECT ID
            INTO v_SubjectID
            FROM fdc_subject
            WHERE inn = :PAYER_INN;
        END IF;
      EXCEPTION
        WHEN no_data_found THEN
          -- Создание нового субъекта
          BEGIN
            CASE :PAYER_TYPESYSNAME
              WHEN 'Broker' THEN
                v_SubjectID := fdc_broker_add(
                    pName      => :PAYER_NAME
                   ,pLicenceNo => :BROKER_LIC
                   ,pBegDate   => :BROKER_DATE_B
                   ,pEndDate   => :BROKER_DATE_E
                   ,pAddress   => :PAYER_ADDRESS
                   ,pOKPO      => :PAYER_OKPO
                   ,pINN       => :PAYER_INN
                   ,pOGRN      => :PAYER_OGRN
                   ,pSOATO     => :PAYER_SOATO
                   ,pKPP       => :PAYER_KPP
                   ,pPhone     => :PAYER_PHONE
                   ,pFax       => :PAYER_FAX
                   ,pTelex     => :PAYER_TELEX
                   ,pTeletype  => :PAYER_TELETYPE
                   ,pBskoltoI  => :BROKER_BSKOLTOI
                   ,pBskoltoII => :BROKER_BSKOLTOII
                  );
              
              WHEN 'Customs' THEN
                v_SubjectID := fdc_customs_add(
                    pName         => :PAYER_NAME
                   ,pAddress      => :PAYER_ADDRESS
                   ,pFullName     => :PAYER_FULL_NAME
                   ,pOKPO         => :PAYER_OKPO
                   ,pINN          => :PAYER_INN
                   ,pOGRN         => :PAYER_OGRN
                   ,pSOATO        => :PAYER_SOATO
                   ,pKPP          => :PAYER_KPP
                   ,pPhone        => :PAYER_PHONE
                   ,pFax          => :PAYER_FAX
                   ,pTelex        => :PAYER_TELEX
                   ,pTeletype     => :PAYER_TELETYPE
                   ,pCustomsCode  => :CUSTOMS_CODE
                   ,pCustomsCode8 => :CUSTOMS_CODE_8
                   ,pDT_START     => :CUSTOMS_DT_START
                   ,pTTT          => :CUSTOMS_TTT
                  );
              
              WHEN 'Bank' THEN
                v_SubjectID := fdc_bank_add(
                    pName         => :PAYER_NAME
                   ,pAddress      => :PAYER_ADDRESS
                   ,pFullName     => :PAYER_FULL_NAME
                   ,pOKPO         => :PAYER_OKPO
                   ,pINN          => :PAYER_INN
                   ,pOGRN         => :PAYER_OGRN
                   ,pSOATO        => :PAYER_SOATO
                   ,pKPP          => :PAYER_KPP
                   ,pPhone        => :PAYER_PHONE
                   ,pFax          => :PAYER_FAX
                   ,pTelex        => :PAYER_TELEX
                   ,pTeletype     => :PAYER_TELETYPE
                   ,pBIC          => :BANK_BIC
                   ,pRurLicDate   => :BANK_RUR_DATE
                   ,pValLicDate   => :BANK_VAL_DATE
                   ,pChiefName    => :BANK_CHIEF_NAME
                   ,pChiefAccName => :BANK_CHIEF_ACC_NAME
                  );
              
              WHEN 'Declarant' THEN
                v_SubjectID := fdc_declarant_add(
                    pName       => :PAYER_NAME
                   ,pAddress    => :PAYER_ADDRESS
                   ,pFullName   => :PAYER_FULL_NAME
                   ,pOKPO       => :PAYER_OKPO
                   ,pINN        => :PAYER_INN
                   ,pOGRN       => :PAYER_OGRN
                   ,pSOATO      => :PAYER_SOATO
                   ,pKPP        => :PAYER_KPP
                   ,pPhone      => :PAYER_PHONE
                   ,pFax        => :PAYER_FAX
                   ,pTelex      => :PAYER_TELEX
                   ,pTelegraph  => :PAYER_TELEGRAPH
                   ,pCategory   => :DECL_CATEGORY
                   ,pCustomCode => :DECL_CUSTOMS_CODE
                   ,pRegDate    => :DECL_REG_DATE
                   ,pPost9      => :DECL_POST9
                   ,pAlfa2      => :DECL_ALFA2
                  );
              
              WHEN 'Person' THEN
                v_SubjectID := fdc_person_add(
                    pLAST_NAME    => :PERS_LAST_NAME
                   ,pFIRST_NAME   => :PERS_FIRST_NAME
                   ,pMIDDLE_NAME  => :PERS_MIDDLE_NAME
                   ,pCOUNTRY_CODE => :PERS_COUNTRY
                   ,pDOC_TYPE     => :PERS_DOC_TYPE
                   ,pSER_NO       => :PERS_SER_NO
                   ,pDOC_NO       => :PERS_DOC_NO
                   ,pISSUED_BY    => :PERS_ISSUED_BY
                   ,pISSUED_DATE  => :PERS_ISSUED_DATE
                   ,pADDRESS      => :PAYER_ADDRESS
                   ,pINN          => :PAYER_INN
                  );
              
              ELSE
                raise_application_error( -20000, 'Не опознаный тип субъекта: <' || :PAYER_TYPESYSNAME || '>!' );
            END CASE;
            
            -- Запомним ID субъекта
            INSERT INTO rest_move_map
              (id, old_id, upload_date)
            VALUES
              (v_SubjectID, :PAYER_ID, :UPLOAD_DATE);
          END;
      END;
  END;

  IF v_Id > 0 THEN
    IF v_Date = :UPLOAD_DATE THEN
      UPDATE fdc_payment_order
         SET doc_no      = :DOC_NO
            ,doc_date    = :DOC_DATE
            ,payer_id    = v_SubjectID
            ,summa       = :REST
            ,currency_id = v_CurrencyId
            ,doc_summa   = :DOC_SUMMA
            ,doc_no2     = :DOC_NO2
            ,doc_date2   = :DOC_DATE2
            ,nref        = :NREF
       WHERE id = v_Id;
    
      UPDATE fdc_object SET descript = :DESCRIPT WHERE id = v_Id;
    END IF;
  ELSE
  
    V_Id := fdc_payment_order_add(
        pDocNo      => :DOC_NO
       ,pDescript   => :DESCRIPT
       ,pDocDate    => :DOC_DATE
       ,pPayerId    => v_SubjectID
       ,pSumma      => :REST
       ,pCurrencyId => v_CurrencyId
       ,pDocSumma   => :DOC_SUMMA
       ,pDocNo2     => :DOC_NO2
       ,pDocDate2   => :DOC_DATE2
      );
    UPDATE fdc_payment_order
      SET nref = :NREF
      WHERE ID = v_Id;
  
    INSERT INTO rest_move_map
      (id, old_id, upload_date)
    VALUES
      (v_Id, :ID, :UPLOAD_DATE);
  END IF;

  COMMIT;
END;
/

[CheckVersionSql]

select    'Версия БД ЛС <' || substr(t.stringvalue,1,20) || '> не соответствует версии модуля переноса остатков <6.1.0.3>!' 
   from    fdc_value_lst_sys t 
where    t.sysname in ('Version', 'VersionUpdate') 
   and substr(t.stringvalue,1,20) <> '6.1.0.3'